
port 26379

dir "/tmp"


bind redis-sentinel1

daemonize yes

pidfile "/opt/bitnami/redis-sentinel/tmp/sentinel.pid"

logfile "/opt/bitnami/redis-sentinel/logs/redis-sentinel.log"

sentinel deny-scripts-reconfig yes


# 去监听一个叫 mymaster 的主服务器，后面带上 reids ip 和 端口，最后说明当有 1 个 sentinel
# 节点认为主服务宕机，才是真的宕机
sentinel monitor mymaster redis-master 6379 1


# 指定 sentinel 认为服务器断线所需要的毫秒数
# sentinel 隔 11s 就会 ping 一次 master,slave,sentinel ，
# 如果最后一次收到 ping 的恢复距离 60000ms，那么就认为是宕机了
sentinel down-after-milliseconds mymaster 60000



# 如果节点宕机，在 180000 ms 没有恢复的话，那么下次选取可用节点的时候
# 就不把他当成一个可用节点
#sentinel failover-timeout redis-master 180000


# 宕机之后调用的报警脚本，执行时间最长为 60s，线上建议配置
#sentinel notification-script redis-master /etc/redis/notify.sh

# Sentinel failover之后重配置客户端时执行的脚本，该配置项可选，但线上系统建议配置。
#sentinel client-reconfig-script redis-master /etc/redis/failover.sh

# 整个集群的启动顺序如下 ： master -> slave -> sentinel

